// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/http/add.go

// Package mock_http is a generated GoMock package.
package mock_http

import (
	service "btc/pkg/service"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAddService is a mock of AddService interface.
type MockAddService struct {
	ctrl     *gomock.Controller
	recorder *MockAddServiceMockRecorder
}

// MockAddServiceMockRecorder is the mock recorder for MockAddService.
type MockAddServiceMockRecorder struct {
	mock *MockAddService
}

// NewMockAddService creates a new mock instance.
func NewMockAddService(ctrl *gomock.Controller) *MockAddService {
	mock := &MockAddService{ctrl: ctrl}
	mock.recorder = &MockAddServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAddService) EXPECT() *MockAddServiceMockRecorder {
	return m.recorder
}

// Save mocks base method.
func (m *MockAddService) Save(add *service.Add) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", add)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockAddServiceMockRecorder) Save(add interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockAddService)(nil).Save), add)
}
